---
import { t } from "i18next";
import { localizePath } from "astro-i18next";
import { roles, roleKeys } from "@rose-pine/palette";
import Logotype from "$components/logotype.svelte";
import LanguageSelect from "$components/language-select.svelte";
import CommandMenu from "$components/command-menu";
import { themes } from "$data/themes";

function isCurrentPage(url: string) {
	return Astro.url.pathname.replace(/(\/.*?)\/$/, "$1") === localizePath(url);
}

const groups = [
	{
		name: t("global_search.heading_pages"),
		items: [
			{
				icon: "Home",
				name: t("navigation.home"),
				href: localizePath("/"),
			},
			{
				icon: "Sailboat",
				name: t("navigation.themes"),
				href: localizePath("/themes"),
			},
			{
				icon: "Palette",
				name: t("navigation.palette"),
				href: localizePath("/palette"),
			},
			{
				icon: "Salt",
				name: t("navigation.ingredients"),
				href: localizePath("/palette/ingredients"),
			},
			{
				icon: "FileDescription",
				name: t("navigation.resources"),
				href: localizePath("/resources"),
			},
		],
	},
	{
		name: t("global_search.heading_themes"),
		featuredName: t("global_search.heading_featured_themes"),
		items: themes.map((theme) => ({
			icon: "Notebook",
			name: theme.name,
			href: theme.url,
		})),
		featuredItems: themes
			.filter((theme) => theme.featured)
			.map((theme) => ({
				icon: "Notebook",
				name: theme.name,
				href: theme.url,
			})),
	},
	{
		name: t("global_search.heading_palette"),
		items: roleKeys.map((role) => ({
			color: `hsl(var(--color-${roles[role].id}))`,
			name: roles[role].name,
			href: `/palette#${roles[role].id}`,
		})),
	},
	{
		name: t("global_search.heading_community"),
		items: [
			{
				icon: "BrandGithubFilled",
				name: "GitHub",
				href: "https://github.com/rose-pine",
			},
			{
				icon: "BrandDiscordFilled",
				name: "Discord",
				href: "https://discord.gg/r6wf35KVJW",
			},
			{
				icon: "BrandTwitterFilled",
				name: "Twitter",
				href: "https://twitter.com/rosepinetheme",
			},
		],
	},
];

const menu = [
	[t("navigation.themes"), "/themes"],
	[t("navigation.palette"), "/palette"],
	[t("navigation.resources"), "/resources"],
];
---

<header class="flex h-header-height justify-center px-page-gutter">
	<div
		class="flex w-full max-w-content items-center justify-between space-x-2.5"
	>
		<a
			href={isCurrentPage("/") ? "#" : localizePath("/")}
			aria-current={isCurrentPage("/") ? "page" : undefined}
			class="-ml-2.5 flex shrink-0 items-center rounded-md px-2.5 py-1.5 transition focus:outline-none focus:ring"
		>
			<span class="sr-only">Ros√© Pine</span>
			<Logotype height={20} />
		</a>

		<nav aria-label="Main" class="block md:hidden">
			<ul role="list" class="flex items-center gap-3">
				<li><LanguageSelect /></li>
				<li class="h-6 border-r" aria-hidden="true"></li>
				<li>
					<details class="group relative">
						<summary
							class="cursor-pointer rounded-md px-2.5 py-1.5 text-[15px] font-semibold transition hover:bg-muted/10 focus:outline-none focus:ring focus:ring-inset"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								stroke-width="2"
								stroke="currentColor"
								fill="none"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="hidden group-open:inline-flex"
							>
								<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
								<path d="M18 6l-12 12"></path>
								<path d="M6 6l12 12"></path>
							</svg>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="24"
								height="24"
								viewBox="0 0 24 24"
								stroke-width="2"
								stroke="currentColor"
								fill="none"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="inline-flex group-open:hidden"
							>
								<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
								<path d="M4 8l16 0"></path>
								<path d="M4 16l16 0"></path>
							</svg>
						</summary>

						<div
							class="absolute right-0 top-10 z-20 w-64 rounded-xl border bg-surface p-3"
						>
							<ul role="list" class="flex flex-col gap-3">
								{
									menu.map(([name, href]) => (
										<li>
											<a
												href={localizePath(href)}
												aria-current={isCurrentPage(href) ? "page" : undefined}
												class="flex justify-between rounded-md p-3 font-semibold transition hover:bg-muted/10 focus:outline-none focus:ring focus:ring-inset [&:hover>svg]:text-text"
											>
												<span>{name}</span>
												<svg
													xmlns="http://www.w3.org/2000/svg"
													class="text-subtle transition"
													width="20"
													height="20"
													viewBox="0 0 24 24"
													stroke-width="2"
													stroke="currentColor"
													fill="none"
													stroke-linecap="round"
													stroke-linejoin="round"
												>
													<path stroke="none" d="M0 0h24v24H0z" fill="none" />
													<path d="M9 6l6 6l-6 6" />
												</svg>
											</a>
										</li>
									))
								}

								<li class="my-3 border-t" aria-hidden="true"></li>

								<li>
									<CommandMenuTrigger client:load size="lg">
										{t("global_search.trigger")}
									</CommandMenuTrigger>
								</li>
							</ul>
						</div>
					</details>
				</li>
			</ul>
		</nav>
	</div>

	<nav aria-label="Main" class="hidden md:flex">
		<ul role="list" class="flex items-center gap-3">
			{
				menu.map(([name, href]) => (
					<li>
						<a
							href={localizePath(href)}
							aria-current={isCurrentPage(href) ? "page" : undefined}
							class="rounded-md px-2.5 py-1.5 text-[15px] font-semibold transition hover:bg-muted/10 focus:outline-none focus:ring focus:ring-inset"
						>
							{name}
						</a>
					</li>
				))
			}

			<li class="h-6 border-r" aria-hidden="true"></li>

			<li><LanguageSelect /></li>

			<li class="h-6 border-r" aria-hidden="true"></li>

			<li>
				<CommandMenu
					client:load
					groups={groups}
					triggerText={t("global_search.trigger")}
					searchText={t("global_search.placeholder")}
					emptyText={t("global_search.empty_text")}
					emptyResults={[
						[t("global_search.empty_result_1"), localizePath("/themes")],
						[t("global_search.empty_result_2"), localizePath("/resources")],
					]}
				/>
			</li>
		</ul>
	</nav>
</header>
